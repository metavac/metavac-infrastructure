{{- define "metavac-db.local_storage_tpl" -}}
  {{ $local_scope := . }}
  {{- range $i, $_ := until ($.replicas | int) -}}
    {{- with $local_scope -}}
      {{- $name := ((cat (get .podLabels "pod-name") "-" $i) | nospace) }}
      {{- $resource := lookup "v1" "PersistentVolume" "" (cat  $name "-volume" | nospace) }}
      {{- if (eq (len $resource) 0) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $name }}-volume
  annotations:
    helm.sh/resource-policy: keep
spec:
  capacity:
    storage: {{ .persistence.size }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: {{ include "metavac-db.local_storage.class_name" . }}
  hostPath:
    path: {{ include "metavac-db.local_storage.local_path" . }}/{{ $name }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.global.cluster_domain }}
      {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- if .Values.local_storage.enabled -}}
  {{- $configsvr := (get .Values "mongodb-sharded").configsvr -}}
  {{- $shardsvr := (get .Values "mongodb-sharded").shardsvr -}}
  {{- $mongos := (get .Values "mongodb-sharded").mongos -}}

  {{- $resource := lookup "storage.k8s.io/v1" "StorageClass" (include "metavac-db.namespace" .) "local-storage" -}}
  {{- if (eq (len $resource) 0) -}}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
  {{- end -}}

  {{ $scope := deepCopy . }}
  {{- with (mergeOverwrite $scope $configsvr) -}}
    {{ include "metavac-db.local_storage_tpl" . }}
  {{- end -}}
  {{- with (mergeOverwrite $scope $shardsvr) -}}
    {{ include "metavac-db.local_storage_tpl" . }}
  {{- end -}}
{{- end -}}