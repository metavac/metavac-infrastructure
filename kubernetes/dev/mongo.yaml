apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: metavac-db-volume
  namespace: metavac-dev
spec:
  capacity:
    storage: 16Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: manual
  hostPath:
    path: /data/db1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: metavac-db-volume-claim
  namespace: metavac-dev
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: manual
  volumeName: metavac-db-volume
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: metavac-db-service
  namespace: metavac-dev
spec:
  type: NodePort
  ports:
  - name: mongodb-main
    protocol: TCP
    port: 27017
    targetPort: 27017
    nodePort: 30007
  selector:
    app: metavac-db
---
apiVersion: v1
kind: Pod
metadata:
  name: metavac-db
  namespace: metavac-dev
  labels:
    app: metavac-db
spec:
  volumes:
    - name: metavac-db-storage
      persistentVolumeClaim:
        claimName: metavac-db-volume-claim
  containers:
  - name: metavac-db
    image: mongo:latest
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 27017
      name: mongodb-main
    volumeMounts:
    - name: metavac-db-storage
      mountPath: /data
      subPath: data
    - name: metavac-db-storage
      mountPath: /etc/ssl
      subPath: certs
    - name: metavac-db-storage
      mountPath: /etc/mongod.conf
      subPath: mongod.conf
    - name: metavac-db-storage
      mountPath: /var/log
      subPath: logs
